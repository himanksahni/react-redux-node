{"ast":null,"code":"var _jsxFileName = \"/Users/himank/Desktop/PROJECTS/react_node_test/react_node_test2/job_test/src/components/employye/employee.js\";\nimport React from 'react';\nimport Survey from '../survey/survey';\nimport { connect } from 'react-redux';\nimport { fetchEmployee, changeEmployee, fetchSurvey, postToBackend } from '../../redux';\n\nclass Employee extends React.Component {\n  constructor(props) {\n    super(props);\n    this.changeEmp = this.changeEmp.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchEmployees();\n    this.props.fetchSurveys();\n  }\n\n  changeEmp(e) {\n    const indx = parseInt(e.target.value);\n    this.props.changeEmployees(indx, this.props.surveys);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"columns is-centered top-margin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"employee has-text-centered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"title is-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, \"Select Employees\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.changeEmp,\n      value: this.props.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: -1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 29\n      }\n    }, \"Select Employee\"), this.props.employees.map((employee, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: i,\n        value: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 40\n        }\n      }, employee.name);\n    }))))), /*#__PURE__*/React.createElement(Survey, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn has-text-centered is-centered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: (() => this, props.postToBackend({})),\n      className: \"button is-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, \"Done\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    employees: state.employee.employee,\n    surveys: state.survey.surveys,\n    assSurvey: state.survey.assSur,\n    empSur: state.employee.empSur,\n    empAss: state.employee.empAss,\n    value: state.employee.value\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchEmployees: () => dispatch(fetchEmployee()),\n    fetchSurveys: () => dispatch(fetchSurvey()),\n    changeEmployees: (indx, surveys) => dispatch(changeEmployee(indx, surveys)),\n    postToBackend: updatedContent => dispatch(postToBackend(updatedContent))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Employee);","map":{"version":3,"sources":["/Users/himank/Desktop/PROJECTS/react_node_test/react_node_test2/job_test/src/components/employye/employee.js"],"names":["React","Survey","connect","fetchEmployee","changeEmployee","fetchSurvey","postToBackend","Employee","Component","constructor","props","changeEmp","bind","componentDidMount","fetchEmployees","fetchSurveys","e","indx","parseInt","target","value","changeEmployees","surveys","render","employees","map","employee","i","name","mapStateToProps","state","survey","assSurvey","assSur","empSur","empAss","mapDispatchToProps","dispatch","updatedContent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Survey from '../survey/survey';\nimport { connect } from 'react-redux';\nimport { fetchEmployee, changeEmployee, fetchSurvey, postToBackend  } from '../../redux'\n\n\n\nclass Employee extends React.Component{\n    constructor(props){\n        super(props);\n        this.changeEmp = this.changeEmp.bind(this)\n    }\n    componentDidMount(){\n        this.props.fetchEmployees()\n        this.props.fetchSurveys()\n \n    }\n    changeEmp(e){\n        const indx = parseInt(e.target.value)\n        this.props.changeEmployees(indx, this.props.surveys)\n    }\n\n\n    render(){\n    return(\n        <div>\n            <div className=\"columns is-centered top-margin\">\n                <div className=\"employee has-text-centered\">\n                <h3 className=\"title is-4\">Select Employees</h3>\n                    <div className=\"select\">\n                        <select onChange={this.changeEmp} value={this.props.value}>\n                            <option value={-1}>Select Employee</option>\n                            { this.props.employees.map((employee,i) => {\n                                return <option key ={i} value={i}>{employee.name}</option>\n                            })}\n                        </select>\n                        </div>\n                </div>\n            </div>\n\n            <Survey/>\n\n            <div className=\"btn has-text-centered is-centered\">\n                <button onClick={()=>this,props.postToBackend({})} \n                        className=\"button is-success\">Done</button>\n            </div>\n        </div>\n    )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        employees: state.employee.employee,\n        surveys: state.survey.surveys,\n        assSurvey: state.survey.assSur,\n        empSur: state.employee.empSur,\n        empAss: state.employee.empAss,\n        value: state.employee.value\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        \n        fetchEmployees: () => dispatch(fetchEmployee()),\n        fetchSurveys: () => dispatch(fetchSurvey()),\n        changeEmployees: (indx, surveys) => dispatch(changeEmployee(indx, surveys)),\n        postToBackend: (updatedContent) => dispatch(postToBackend(updatedContent))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Employee);\n"]},"metadata":{},"sourceType":"module"}
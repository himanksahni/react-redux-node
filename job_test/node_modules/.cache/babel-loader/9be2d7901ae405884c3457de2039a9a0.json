{"ast":null,"code":"var _jsxFileName = \"/Users/himank/Desktop/PROJECTS/react_node_test/react_node_test2/job_test/src/components/employye/employee.js\";\nimport React from 'react';\nimport Survey from '../survey/survey';\nimport { connect } from 'react-redux';\nimport { fetchEmployee, changeEmployee, fetchSurvey } from '../../redux';\n\nclass Employee extends React.Component {\n  constructor(props) {\n    super(props);\n    this.changeEmp = this.changeEmp.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchEmployees();\n    this.props.fetchSurveys();\n  }\n\n  changeEmp(e) {\n    const indx = parseInt(e.target.value);\n    this.props.changeEmployees(indx, this.props.surveys);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"columns is-centered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"employee has-text-centered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, \"Select Employee\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.changeEmp,\n      value: this.state.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: -1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 29\n      }\n    }, \"Select Employee\"), this.props.employees.map((employee, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: i,\n        value: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 40\n        }\n      }, employee.name);\n    }))))), /*#__PURE__*/React.createElement(Survey, {\n      empSur: this.props.empSur,\n      empAss: this.props.empAss,\n      employees: this.props.employees,\n      employee: this.props.employees[this.state.value],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"has-text-centered is-centered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button is-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, \"Done\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    employees: state.employee.employee,\n    surveys: state.survey.surveys,\n    assSurvey: state.survey.assSur,\n    empSur: state.employee.empSur,\n    empAss: state.employee.empAss,\n    value: state.employee.value\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchEmployees: () => dispatch(fetchEmployee()),\n    fetchSurveys: () => dispatch(fetchSurvey()),\n    changeEmployees: (indx, surveys) => dispatch(changeEmployee(indx, surveys))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Employee);","map":{"version":3,"sources":["/Users/himank/Desktop/PROJECTS/react_node_test/react_node_test2/job_test/src/components/employye/employee.js"],"names":["React","Survey","connect","fetchEmployee","changeEmployee","fetchSurvey","Employee","Component","constructor","props","changeEmp","bind","componentDidMount","fetchEmployees","fetchSurveys","e","indx","parseInt","target","value","changeEmployees","surveys","render","state","employees","map","employee","i","name","empSur","empAss","mapStateToProps","survey","assSurvey","assSur","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Survey from '../survey/survey';\nimport { connect } from 'react-redux';\nimport { fetchEmployee, changeEmployee, fetchSurvey  } from '../../redux'\n\n\n\nclass Employee extends React.Component{\n    constructor(props){\n        super(props);\n        this.changeEmp = this.changeEmp.bind(this)\n    }\n\n    componentDidMount(){\n        this.props.fetchEmployees()\n        this.props.fetchSurveys()\n \n    }\n\n    changeEmp(e){\n\n        const indx = parseInt(e.target.value)\n        this.props.changeEmployees(indx, this.props.surveys)\n\n    }\n\n\n    render(){\n    return(\n        <div>\n            <div className=\"columns is-centered\">\n                <div className=\"employee has-text-centered\">\n                <h3>Select Employee</h3>\n                    <div className=\"select\">\n                        <select onChange={this.changeEmp} value={this.state.value}>\n                            <option value={-1}>Select Employee</option>\n                            { this.props.employees.map((employee,i) => {\n                                return <option key ={i} value={i}>{employee.name}</option>\n                            })}\n                        </select>\n                        </div>\n                </div>\n            </div>\n\n            <Survey empSur={this.props.empSur} \n                    empAss={this.props.empAss}\n                    employees={this.props.employees}\n                    employee ={this.props.employees[this.state.value]}/>\n\n            <div className=\"has-text-centered is-centered\">\n                <button className=\"button is-success\">Done</button>\n            </div>\n        </div>\n    )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        employees: state.employee.employee,\n        surveys: state.survey.surveys,\n        assSurvey: state.survey.assSur,\n        empSur: state.employee.empSur,\n        empAss: state.employee.empAss,\n        value: state.employee.value\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        \n        fetchEmployees: () => dispatch(fetchEmployee()),\n        fetchSurveys: () => dispatch(fetchSurvey()),\n        changeEmployees: (indx, surveys) => dispatch(changeEmployee(indx, surveys))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Employee);\n"]},"metadata":{},"sourceType":"module"}